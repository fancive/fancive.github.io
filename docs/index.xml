<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fancivez on home</title>
    <link>https://fancive.github.io/</link>
    <description>Recent content in fancivez on home</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 11 Jan 2025 16:26:38 +0800</lastBuildDate>
    <atom:link href="https://fancive.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Wheel of Life 2024</title>
      <link>https://fancive.github.io/posts/wheel-of-life-2024/</link>
      <pubDate>Sat, 11 Jan 2025 16:26:38 +0800</pubDate>
      <guid>https://fancive.github.io/posts/wheel-of-life-2024/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;我让大模型读取了我的2024年每个月的月报(从周报和日记中总结)，得到了以下的生命之轮得分&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;生命之轮-2024&#34;&gt;生命之轮 2024&lt;/h1&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;wheel_of_life_2024&#34; src=&#34;https://fancive.github.io/images/img/wheel_of_life_2024.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;基于对全年12个月的完整回顾分析，我现在重新为生命之轮的八个维度进行评分：&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;事业发展8分-1&#34;&gt;事业发展：8分 (↑1)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;全年完成多个重要项目：ES监控系统、自动部署工具、圈子项目等&lt;/li&gt;&#xA;&lt;li&gt;技术能力持续提升，涉及多个领域（Flutter、Docker、Node.js等）&lt;/li&gt;&#xA;&lt;li&gt;论文研究有进展，完成开题答辩&lt;/li&gt;&#xA;&lt;li&gt;下半年在工作中展现出更强的影响力和决策能力&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;待改进：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;工作压力管理仍需优化&lt;/li&gt;&#xA;&lt;li&gt;项目时间管理需要提升&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;人际关系75分-05&#34;&gt;人际关系：7.5分 (↑0.5)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;团队协作能力提升，能够处理复杂的跨部门协作&lt;/li&gt;&#xA;&lt;li&gt;在工作中学会更好的沟通方式&lt;/li&gt;&#xA;&lt;li&gt;能够在矛盾中寻找共同点&lt;/li&gt;&#xA;&lt;li&gt;下半年展现出更强的沟通和影响力&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;待改进：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在压力下的沟通方式仍需改善&lt;/li&gt;&#xA;&lt;li&gt;家庭关系的调解技巧需要提升&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;教育学习85分-05&#34;&gt;教育学习：8.5分 (↑0.5)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;持续的技术学习和算法训练&lt;/li&gt;&#xA;&lt;li&gt;广泛的知识积累：技术、心理、生产力等多个领域&lt;/li&gt;&#xA;&lt;li&gt;建立了固定的学习习惯（自习室）&lt;/li&gt;&#xA;&lt;li&gt;论文研究有实质性进展&lt;/li&gt;&#xA;&lt;li&gt;积极学习新技术和工具&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;待改进：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;娱乐时间管理需要优化&lt;/li&gt;&#xA;&lt;li&gt;学习计划执行的连续性需要提升&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;心灵成长85分-05&#34;&gt;心灵成长：8.5分 (↑0.5)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;持续的冥想练习和自我觉察&lt;/li&gt;&#xA;&lt;li&gt;情绪管理能力显著提升&lt;/li&gt;&#xA;&lt;li&gt;能够在压力下保持平和&lt;/li&gt;&#xA;&lt;li&gt;建立了有效的压力管理机制&lt;/li&gt;&#xA;&lt;li&gt;年底开始更注重生活的平衡&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;待改进：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在家庭矛盾中的情绪管理仍需提升&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;健康状况65分-05&#34;&gt;健康状况：6.5分 (↓0.5)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;尝试建立运动习惯（健身、瑜伽）&lt;/li&gt;&#xA;&lt;li&gt;开始注意饮食健康&lt;/li&gt;&#xA;&lt;li&gt;有意识地关注身体状况&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;待改进：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;作息极不规律，经常熬夜&lt;/li&gt;&#xA;&lt;li&gt;运动频率不稳定，年底明显下降&lt;/li&gt;&#xA;&lt;li&gt;反复出现身体不适（扁桃体、咽喉等）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;家庭关系75分-05&#34;&gt;家庭关系：7.5分 (↓0.5)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;保持固定的亲子活动和陪伴时间&lt;/li&gt;&#xA;&lt;li&gt;积极改善育儿方式&lt;/li&gt;&#xA;&lt;li&gt;重视家庭活动和出游&lt;/li&gt;&#xA;&lt;li&gt;关注家人健康&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;待改进：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;家庭矛盾（特别是婆媳关系）需要更好的处理&lt;/li&gt;&#xA;&lt;li&gt;夫妻相处时间和质量需要提升&lt;/li&gt;&#xA;&lt;li&gt;育儿方式仍需改进&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;金钱财富7分-1&#34;&gt;金钱财富：7分 (↑1)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>放下遗憾，拥抱自我</title>
      <link>https://fancive.github.io/posts/reflecting-on-achievements-and-regrets/</link>
      <pubDate>Tue, 07 Jan 2025 13:41:38 +0800</pubDate>
      <guid>https://fancive.github.io/posts/reflecting-on-achievements-and-regrets/</guid>
      <description>&lt;h2 id=&#34;时间不够了&#34;&gt;&lt;strong&gt;时间不够了&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;昨晚睡前，在冥想期间，我开始从近到远回顾自己的成长历程，回忆起大学、高中、初中和小学阶段。重温大学和高中时那种“时间不够复习，高考（毕业考试）怎么办”的绝望感，不禁让我落泪。同时，我也回想起初中刚住校时非常想家的情感。与同学们一起踢球玩游戏的快乐，高中时发现自己不如别人的焦急，以及在自习时抬头发现别人都在低头写作业的茫然，不解为什么别人都能如此投入，而我却觉得学习并没有那么吸引我。&lt;/p&gt;&#xA;&lt;h2 id=&#34;成就与堕落&#34;&gt;&lt;strong&gt;成就与堕落&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;在冥想中，我意识到，相对于当时的平均水平，我几乎实现了当时的全部潜力。具体表现为：小学时成绩中上，但小升初考试考进了全县前10；初中成绩中游，但考上了顶尖高中；高中成绩虽在班级倒数，但高考成绩在班级中游；毕业时没有学位证，但最终还是得到了一份开发的工作。这些成就让我感到自己基本达到了当时的上限。然而，尽管达到了这些成就，我仍然感到非常遗憾。这种遗憾源于我的自我预期远超现实，我原本期望能够取得更高的成就，成为『别人家的孩子』。&lt;/p&gt;&#xA;&lt;p&gt;我曾以为堕落（游戏成瘾）始于高中，但实际上，整个个人体系并不是在高中形成的。习惯（学习和生活）、兴趣（追求）、韧性、精力管理、思维模式等等，这些都已经存在。高中只是整个系统的进一步演化，而这套系统并不支持在高中阶段更高水平的表现要求。除了游戏成瘾，我认为还有其他因素导致了我在学业和生活上的堕落。我曾以为自己动机不足，于是希望通过激发紧张感来获得动机，并盲目设定不切实际的宏伟目标来激发自己。然而，行动并不持久，以至于在不断的失败中失去了信心，最终几乎放弃了努力。&lt;/p&gt;&#xA;&lt;h2 id=&#34;家庭影响与自我认知&#34;&gt;&lt;strong&gt;家庭影响与自我认知&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;我的愤怒源于深深的遗憾，我曾以为父母本可以通过更多的陪伴和支持让事情不至于这样发展。然而，我也明白这种“如果”假设是不成立的，现实中并不存在这样的可能性。尽管如此，我发现父母的行为并未达到我对他们的预期，导致了我的不满和失望。&lt;/p&gt;&#xA;&lt;p&gt;尽管如此，我知道我的父母非常爱我。他们在自己的方式上尽力支持我，但由于缺乏相关的经验和知识，他们的行为方式并不能完全满足我的情感需求。父母过于强调我的聪明，将成就归因于智力，而忽视了对努力和情感需求的关注。父亲性格内向，缺乏社交和行动力，常常忙于自己的事务，无法给予我足够的支持；母亲虽然更具社交性和责任感，给予了我很多爱，但她的固定型思维和对成功的狭隘定义，使我感到压力和匮乏感。父母之间的冲突也加深了我的困惑和不满，导致我在追求完美的过程中，内化了将自尊与成就绑定的观念，进而形成了完美主义和受害者心态。&lt;/p&gt;&#xA;&lt;p&gt;拥有了孩子之后，我开始更加理解我的父母，认识到他们也有自己的课题和困境。他们在各自的生活中面临挑战，尽管爱我，但他们的方式和资源有限，无法完全满足我的需求。这种理解让我意识到，父母的爱是存在的，但表达爱的方式可能并不完美。这种觉悟帮助我减少了对他们的责备，转而更多地理解和包容。&lt;/p&gt;&#xA;&lt;h2 id=&#34;感激与支持&#34;&gt;&lt;strong&gt;感激与支持&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;在这一过程中，我深深感激我的妻子。她能够充分接纳我的情感，与我进行许多教练式的对话，帮助我慢慢认识自己。她不仅给予我无条件的支持，还让我对自己拥有了更多的同情和宽容。通过她的帮助，我学会了更加温柔地对待自己，理解自己的不足，并积极寻求成长。这种支持在我走出受害者心态、重建自信心的过程中起到了至关重要的作用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;启发与未来&#34;&gt;&lt;strong&gt;启发与未来&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;通过这次冥想，我意识到需要重新定义我对孩子的期待，希望她养成哪些品质和习惯，并规划如何长期行动，以及避免固定性思维。我还意识到我不必成为最好的（最聪明的），对高中时取得的成绩表示理解（虽然考试基本都是倒数），因此不再感到那么遗憾。这些经验教会我如何更有效地管理自己的时间和精力，培养积极的习惯，调整思维模式，并建立强有力的支持系统，以更好地面对未来的挑战。&lt;/p&gt;&#xA;&lt;p&gt;在反思过去的基础上，我对未来有了新的期望和目标。我希望能够通过自身的改变和努力，成为一个更好的父母，帮助我的孩子养成良好的习惯和积极的思维模式。持续学习、寻求专业指导以及建立稳固的支持系统来实现这些目标。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Llm Driven Alert Diagnosis Engine Design(设计新一代LLM驱动的告警诊断引擎)</title>
      <link>https://fancive.github.io/posts/llm-driven-alert-diagnosis-engine-design/</link>
      <pubDate>Sat, 31 Aug 2024 09:42:01 +0800</pubDate>
      <guid>https://fancive.github.io/posts/llm-driven-alert-diagnosis-engine-design/</guid>
      <description>&lt;p&gt;在当今复杂的IT环境中，快速准确地诊断和解决系统问题变得越来越具有挑战性。本文将探讨如何设计一个由大语言模型（LLM）驱动的诊断引擎，作为自动定位系统的核心组件，以智能化方式处理系统告警。&lt;/p&gt;&#xA;&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;&#xA;&lt;p&gt;随着系统规模和复杂性的增加，传统的基于规则的告警诊断方法往往力不从心。我们需要一种更智能、更灵活的方法来分析和诊断系统告警。这就是LLM驱动的诊断引擎发挥作用的地方。&lt;/p&gt;&#xA;&lt;h2 id=&#34;宏观系统架构自动定位系统&#34;&gt;宏观系统架构：自动定位系统&lt;/h2&gt;&#xA;&lt;p&gt;在深入探讨LLM驱动的诊断引擎之前，让我们先了解它在整个自动定位系统中的位置。自动定位系统是一个复杂的生态系统，旨在自动检测、诊断和解决IT环境中的问题。以下是系统的宏观架构：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph TB&#xA;    A[监控系统] --&amp;gt;|告警| B[告警聚合器]&#xA;    B --&amp;gt;|结构化告警| C[LLM驱动的诊断引擎]&#xA;    D[日志系统] --&amp;gt;|相关日志| C&#xA;    E[配置管理数据库] --&amp;gt;|系统配置| C&#xA;    F[知识库] --&amp;gt;|历史案例| C&#xA;    C --&amp;gt;|诊断结果| G[自动修复系统]&#xA;    C --&amp;gt;|诊断报告| H[运维仪表板]&#xA;    I[人工反馈] --&amp;gt;|优化信息| C&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以Elasticsearch作为数据源为例:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;sequenceDiagram&#xA;    participant ES as Elasticsearch&#xA;    participant AR as 告警规则执行器&#xA;    participant AM as 告警管理器&#xA;    participant LLM as LLM诊断引擎&#xA;    participant NT as 通知系统&#xA;    &#xA;    loop 定期执行&#xA;        AR-&amp;gt;&amp;gt;ES: 执行查询表达式&#xA;        ES--&amp;gt;&amp;gt;AR: 返回查询结果&#xA;        AR-&amp;gt;&amp;gt;AR: 应用时间窗口和阈值&#xA;        alt 触发告警条件&#xA;            AR-&amp;gt;&amp;gt;AM: 生成告警&#xA;            AM-&amp;gt;&amp;gt;LLM: 请求诊断&#xA;            LLM-&amp;gt;&amp;gt;LLM: 分析告警上下文&#xA;            LLM--&amp;gt;&amp;gt;AM: 返回诊断结果&#xA;            AM-&amp;gt;&amp;gt;NT: 发送通知&#xA;        end&#xA;    end&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在这个宏观架构中，LLM驱动的诊断引擎扮演着核心角色：&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Paper reading] A Survey On Log Research Of AIOps: Methods and Trends</title>
      <link>https://fancive.github.io/posts/paper_reading_a_survey_on_log_research_of_aiops/</link>
      <pubDate>Sat, 25 Mar 2023 13:43:03 +0800</pubDate>
      <guid>https://fancive.github.io/posts/paper_reading_a_survey_on_log_research_of_aiops/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;link: &lt;a href=&#34;https://dl.acm.org/doi/abs/10.1007/s11036-021-01832-3&#34;&gt;https://dl.acm.org/doi/abs/10.1007/s11036-021-01832-3&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;first-pass&#34;&gt;first pass&lt;/h1&gt;&#xA;&lt;p&gt;5-10 mins&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;title, abstract, and introduction&lt;/li&gt;&#xA;&lt;li&gt;section and sub-section headings&lt;/li&gt;&#xA;&lt;li&gt;conclusions&lt;/li&gt;&#xA;&lt;li&gt;references&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;question&#34;&gt;question&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Category: What type of paper is this? A measurement paper? An analysis of an existing system? A description of a research prototype?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;It’s a survey paper on the methods and trend on log based AIOps.&lt;/p&gt;&#xA;&lt;p&gt;It does not seem to focus on a specific system or prototype, but rather explore the current state of research in the field.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[paper reading]AIOps: Real-World Challenges and Research Innovations</title>
      <link>https://fancive.github.io/posts/paper_reading_aiops_real-world_challenges_and_research_innovations/</link>
      <pubDate>Sat, 18 Mar 2023 13:35:19 +0800</pubDate>
      <guid>https://fancive.github.io/posts/paper_reading_aiops_real-world_challenges_and_research_innovations/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;link: &lt;a href=&#34;https://ieeexplore.ieee.org/abstract/document/8802836&#34;&gt;https://ieeexplore.ieee.org/abstract/document/8802836&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;first-pass&#34;&gt;first pass&lt;/h2&gt;&#xA;&lt;p&gt;5-10 mins&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;title, abstract, and introduction&lt;/li&gt;&#xA;&lt;li&gt;section and sub-section headings&lt;/li&gt;&#xA;&lt;li&gt;conclusions&lt;/li&gt;&#xA;&lt;li&gt;references&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;question&#34;&gt;question&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Category: What type of paper is this? A measurement paper? An analysis of an existing system? A description of a research prototype?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;It is a descriptive paper that discusses the challenges and innovations related to the implementation of AIOps in real-world IT operations.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Context: Which other papers is it related to? Which theoretical bases were used to analyze the problem?&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>我从filebeat-harvester中学到什么</title>
      <link>https://fancive.github.io/posts/what_i_learned_from_filebeat_harvester/</link>
      <pubDate>Mon, 28 Nov 2022 14:13:14 +0800</pubDate>
      <guid>https://fancive.github.io/posts/what_i_learned_from_filebeat_harvester/</guid>
      <description>&lt;h3 id=&#34;总体流程&#34;&gt;总体流程&lt;/h3&gt;&#xA;&lt;p&gt;filebeat 对每个path都会创建一个 &lt;code&gt;harvester&lt;/code&gt;,  &lt;code&gt;harvester&lt;/code&gt; 负责逐行读取文件内容。它的上游是 &lt;code&gt;input&lt;/code&gt; , &lt;code&gt;input&lt;/code&gt; 负责管理&lt;code&gt;harvester&lt;/code&gt;, 它的下游是 &lt;code&gt;output&lt;/code&gt;, &lt;code&gt;output&lt;/code&gt; 负责消费每一行消息。&lt;/p&gt;&#xA;&lt;p&gt;通过阅读harvester代码，我学习到了如何管理多个相互依赖的协程的生命周期，具体可以拆分为4个问题&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;为主协程添加超时控制协程&lt;/li&gt;&#xA;&lt;li&gt;主协程结束如何关闭超时控制协程和其他协程(&lt;code&gt;monitorFileSize&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;关闭协程时如何控制不同job间的先后执行顺序&lt;/li&gt;&#xA;&lt;li&gt;如何从外部关闭任务，并等待清理完成&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;超时控制协程&#34;&gt;超时控制协程&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;(h *Harvester)Run()&lt;/code&gt; 方法里，会创建超时控制协程，在此协程中会消费2个事件&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;超时事件 &lt;code&gt;closeTimeout&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;主任务结束标志 &lt;code&gt;h.done&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;一旦接收到其中一个事件，那么会调用 &lt;code&gt;stop&lt;/code&gt; 并关闭 &lt;code&gt;reader&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Closes reader after timeout or when done channel is closed&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;// This routine is also responsible to properly stop the reader&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;go&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;source&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;closeTimeout&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; make(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;chan&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Time&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// starts close_timeout timer&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;CloseTimeout&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;closeTimeout&lt;/span&gt; = &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;After&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;CloseTimeout&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Applies when timeout is reached&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;closeTimeout&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Infof&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Closing harvester because close_timeout was reached: %s&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;source&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Required when reader loop returns and reader finished&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;done&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;stop&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;reader&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Close&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Errorf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Failed to stop harvester for file: %v&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}(&lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Source&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;主协程关闭其他附属功能协程&#34;&gt;主协程关闭其他附属功能协程&lt;/h3&gt;&#xA;&lt;p&gt;一句话，主要是通过调用 &lt;code&gt;stop&lt;/code&gt; (在defer里)， &lt;code&gt;stop&lt;/code&gt; 里会 &lt;code&gt;close(h.done)&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>filebeat中使用的设计模式</title>
      <link>https://fancive.github.io/posts/design_pattern_used_in_filebeat/</link>
      <pubDate>Wed, 16 Sep 2020 22:15:59 +0800</pubDate>
      <guid>https://fancive.github.io/posts/design_pattern_used_in_filebeat/</guid>
      <description>&lt;h2 id=&#34;registry-与-lazyinit-结合&#34;&gt;registry 与 lazyinit 结合&lt;/h2&gt;&#xA;&lt;p&gt;filebeat/input.New&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; = &lt;span style=&#34;color:#a6e22e&#34;&gt;GetFactory&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Type&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;GetFactory&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GetFactory&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;) (&lt;span style=&#34;color:#a6e22e&#34;&gt;Factory&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;exists&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;registry&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;]; !&lt;span style=&#34;color:#a6e22e&#34;&gt;exists&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Errorf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Error creating input. No such input type exist: &amp;#39;%v&amp;#39;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;registry&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;], &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注册&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;init&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Register&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;NewInput&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        panic(&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;observer&#34;&gt;observer&lt;/h2&gt;&#xA;&lt;p&gt;publish&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bus&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;Publish&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Event&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;RLock&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;defer&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;RUnlock&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;logp&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Debug&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bus&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s: %+v&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;listener&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;range&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;listeners&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;listener&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;interested&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;listener&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;channel&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Subscribe&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bus&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;Subscribe&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;Listener&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;listener&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;listener&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;:  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;bus&lt;/span&gt;:     &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;channel&lt;/span&gt;: make(&lt;span style=&#34;color:#66d9ef&#34;&gt;chan&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Event&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Lock&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;defer&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Unlock&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;listeners&lt;/span&gt; = append(&lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;listeners&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;listener&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;listener&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;strategy&#34;&gt;strategy&lt;/h2&gt;&#xA;&lt;p&gt;libbeat/outputs/kafka.makePartitioner()&lt;/p&gt;</description>
    </item>
    <item>
      <title>go string to byte</title>
      <link>https://fancive.github.io/posts/go_string_byte/</link>
      <pubDate>Sun, 31 May 2020 21:30:28 +0800</pubDate>
      <guid>https://fancive.github.io/posts/go_string_byte/</guid>
      <description>&lt;h2 id=&#34;0x01-背景&#34;&gt;0x01 背景&lt;/h2&gt;&#xA;&lt;p&gt;最近在review其他同学代码发现将 string转[]byte的时候，得到的[]byte的容量是会变的, 比如如下一段代码的输出是32&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;s1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;abc&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(cap([]byte(&lt;span style=&#34;color:#a6e22e&#34;&gt;s1&lt;/span&gt;)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;0x02-探究&#34;&gt;0x02 探究&lt;/h2&gt;&#xA;&lt;p&gt;那么这是为什么呢，首先看汇编&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;-N 禁止优化&#xA;-S 输出汇编代码&#xA;-l 禁止内联&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;go&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;gcflags&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-N -l -S&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;go&lt;/span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;go&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;得到以下代码&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#34;&amp;#34;.main STEXT size=293 args=0x0 locals=0xc0&#xA;&#x9;0x0000 00000 (/home/xxx/go.go:5)&#x9;TEXT&#x9;&amp;#34;&amp;#34;.main(SB), ABIInternal, $192-0&#xA;&#x9;0x0000 00000 (/home/xxx/go.go:5)&#x9;MOVQ&#x9;(TLS), CX&#xA;&#x9;0x0009 00009 (/home/xxx/go.go:5)&#x9;LEAQ&#x9;-64(SP), AX&#xA;&#x9;0x000e 00014 (/home/xxx/go.go:5)&#x9;CMPQ&#x9;AX, 16(CX)&#xA;&#x9;0x0012 00018 (/home/xxx/go.go:5)&#x9;JLS&#x9;283&#xA;&#x9;0x0018 00024 (/home/xxx/go.go:5)&#x9;SUBQ&#x9;$192, SP&#xA;&#x9;0x001f 00031 (/home/xxx/go.go:5)&#x9;MOVQ&#x9;BP, 184(SP)&#xA;&#x9;0x0027 00039 (/home/xxx/go.go:5)&#x9;LEAQ&#x9;184(SP), BP&#xA;&#x9;0x002f 00047 (/home/xxx/go.go:5)&#x9;FUNCDATA&#x9;$0, gclocals·7d2d5fca80364273fb07d5820a76fef4(SB)&#xA;&#x9;0x002f 00047 (/home/xxx/go.go:5)&#x9;FUNCDATA&#x9;$1, gclocals·4dc9e0f0c3406fbbbbd2ec99068e8282(SB)&#xA;&#x9;0x002f 00047 (/home/xxx/go.go:5)&#x9;FUNCDATA&#x9;$2, gclocals·8dcadbff7c52509cfe2d26e4d7d24689(SB)&#xA;&#x9;0x002f 00047 (/home/xxx/go.go:5)&#x9;FUNCDATA&#x9;$3, &amp;#34;&amp;#34;.main.stkobj(SB)&#xA;&#x9;0x002f 00047 (/home/xxx/go.go:6)&#x9;PCDATA&#x9;$0, $1&#xA;&#x9;0x002f 00047 (/home/xxx/go.go:6)&#x9;PCDATA&#x9;$1, $0&#xA;&#x9;0x002f 00047 (/home/xxx/go.go:6)&#x9;LEAQ&#x9;go.string.&amp;#34;abc&amp;#34;(SB), AX&#xA;&#x9;0x0036 00054 (/home/xxx/go.go:6)&#x9;MOVQ&#x9;AX, &amp;#34;&amp;#34;.s1+104(SP)&#xA;&#x9;0x003b 00059 (/home/xxx/go.go:6)&#x9;MOVQ&#x9;$3, &amp;#34;&amp;#34;.s1+112(SP)&#xA;&#x9;0x0044 00068 (/home/xxx/go.go:7)&#x9;PCDATA&#x9;$0, $2&#xA;&#x9;0x0044 00068 (/home/xxx/go.go:7)&#x9;LEAQ&#x9;&amp;#34;&amp;#34;..autotmp_4+56(SP), CX&#xA;&#x9;0x0049 00073 (/home/xxx/go.go:7)&#x9;PCDATA&#x9;$0, $1&#xA;&#x9;0x0049 00073 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;CX, (SP)&#xA;&#x9;0x004d 00077 (/home/xxx/go.go:7)&#x9;PCDATA&#x9;$0, $0&#xA;&#x9;0x004d 00077 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;AX, 8(SP)&#xA;&#x9;0x0052 00082 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;$3, 16(SP)&#xA;&#x9;0x005b 00091 (/home/xxx/go.go:7)&#x9;CALL&#x9;runtime.stringtoslicebyte(SB)&#xA;&#x9;0x0060 00096 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;40(SP), AX&#xA;&#x9;0x0065 00101 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;32(SP), CX&#xA;&#x9;0x006a 00106 (/home/xxx/go.go:7)&#x9;PCDATA&#x9;$0, $3&#xA;&#x9;0x006a 00106 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;24(SP), DX&#xA;&#x9;0x006f 00111 (/home/xxx/go.go:7)&#x9;PCDATA&#x9;$0, $0&#xA;&#x9;0x006f 00111 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;DX, &amp;#34;&amp;#34;..autotmp_2+160(SP)&#xA;&#x9;0x0077 00119 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;CX, &amp;#34;&amp;#34;..autotmp_2+168(SP)&#xA;&#x9;0x007f 00127 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;AX, &amp;#34;&amp;#34;..autotmp_2+176(SP)&#xA;&#x9;0x0087 00135 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;AX, &amp;#34;&amp;#34;..autotmp_3+48(SP)&#xA;&#x9;0x008c 00140 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;AX, (SP)&#xA;&#x9;0x0090 00144 (/home/xxx/go.go:7)&#x9;CALL&#x9;runtime.convT64(SB)&#xA;&#x9;0x0095 00149 (/home/xxx/go.go:7)&#x9;PCDATA&#x9;$0, $1&#xA;&#x9;0x0095 00149 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;8(SP), AX&#xA;&#x9;0x009a 00154 (/home/xxx/go.go:7)&#x9;PCDATA&#x9;$0, $0&#xA;&#x9;0x009a 00154 (/home/xxx/go.go:7)&#x9;PCDATA&#x9;$1, $1&#xA;&#x9;0x009a 00154 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;AX, &amp;#34;&amp;#34;..autotmp_5+96(SP)&#xA;&#x9;0x009f 00159 (/home/xxx/go.go:7)&#x9;PCDATA&#x9;$1, $2&#xA;&#x9;0x009f 00159 (/home/xxx/go.go:7)&#x9;XORPS&#x9;X0, X0&#xA;&#x9;0x00a2 00162 (/home/xxx/go.go:7)&#x9;MOVUPS&#x9;X0, &amp;#34;&amp;#34;..autotmp_1+120(SP)&#xA;&#x9;0x00a7 00167 (/home/xxx/go.go:7)&#x9;PCDATA&#x9;$0, $1&#xA;&#x9;0x00a7 00167 (/home/xxx/go.go:7)&#x9;PCDATA&#x9;$1, $1&#xA;&#x9;0x00a7 00167 (/home/xxx/go.go:7)&#x9;LEAQ&#x9;&amp;#34;&amp;#34;..autotmp_1+120(SP), AX&#xA;&#x9;0x00ac 00172 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;AX, &amp;#34;&amp;#34;..autotmp_7+88(SP)&#xA;&#x9;0x00b1 00177 (/home/xxx/go.go:7)&#x9;TESTB&#x9;AL, (AX)&#xA;&#x9;0x00b3 00179 (/home/xxx/go.go:7)&#x9;PCDATA&#x9;$0, $2&#xA;&#x9;0x00b3 00179 (/home/xxx/go.go:7)&#x9;PCDATA&#x9;$1, $0&#xA;&#x9;0x00b3 00179 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;&amp;#34;&amp;#34;..autotmp_5+96(SP), CX&#xA;&#x9;0x00b8 00184 (/home/xxx/go.go:7)&#x9;PCDATA&#x9;$0, $4&#xA;&#x9;0x00b8 00184 (/home/xxx/go.go:7)&#x9;LEAQ&#x9;type.int(SB), DX&#xA;&#x9;0x00bf 00191 (/home/xxx/go.go:7)&#x9;PCDATA&#x9;$0, $2&#xA;&#x9;0x00bf 00191 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;DX, &amp;#34;&amp;#34;..autotmp_1+120(SP)&#xA;&#x9;0x00c4 00196 (/home/xxx/go.go:7)&#x9;PCDATA&#x9;$0, $1&#xA;&#x9;0x00c4 00196 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;CX, &amp;#34;&amp;#34;..autotmp_1+128(SP)&#xA;&#x9;0x00cc 00204 (/home/xxx/go.go:7)&#x9;TESTB&#x9;AL, (AX)&#xA;&#x9;0x00ce 00206 (/home/xxx/go.go:7)&#x9;JMP&#x9;208&#xA;&#x9;0x00d0 00208 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;AX, &amp;#34;&amp;#34;..autotmp_6+136(SP)&#xA;&#x9;0x00d8 00216 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;$1, &amp;#34;&amp;#34;..autotmp_6+144(SP)&#xA;&#x9;0x00e4 00228 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;$1, &amp;#34;&amp;#34;..autotmp_6+152(SP)&#xA;&#x9;0x00f0 00240 (/home/xxx/go.go:7)&#x9;PCDATA&#x9;$0, $0&#xA;&#x9;0x00f0 00240 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;AX, (SP)&#xA;&#x9;0x00f4 00244 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;$1, 8(SP)&#xA;&#x9;0x00fd 00253 (/home/xxx/go.go:7)&#x9;MOVQ&#x9;$1, 16(SP)&#xA;&#x9;0x0106 00262 (/home/xxx/go.go:7)&#x9;CALL&#x9;fmt.Println(SB)&#xA;&#x9;0x010b 00267 (/home/xxx/go.go:9)&#x9;MOVQ&#x9;184(SP), BP&#xA;&#x9;0x0113 00275 (/home/xxx/go.go:9)&#x9;ADDQ&#x9;$192, SP&#xA;&#x9;0x011a 00282 (/home/xxx/go.go:9)&#x9;RET&#xA;&#x9;0x011b 00283 (/home/xxx/go.go:9)&#x9;NOP&#xA;&#x9;0x011b 00283 (/home/xxx/go.go:5)&#x9;PCDATA&#x9;$1, $-1&#xA;&#x9;0x011b 00283 (/home/xxx/go.go:5)&#x9;PCDATA&#x9;$0, $-1&#xA;&#x9;0x011b 00283 (/home/xxx/go.go:5)&#x9;CALL&#x9;runtime.morestack_noctxt(SB)&#xA;&#x9;0x0120 00288 (/home/xxx/go.go:5)&#x9;JMP&#x9;0&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;声明部分&lt;/p&gt;</description>
    </item>
    <item>
      <title>[翻译]go interface</title>
      <link>https://fancive.github.io/posts/go_interface/</link>
      <pubDate>Wed, 06 May 2020 22:20:18 +0800</pubDate>
      <guid>https://fancive.github.io/posts/go_interface/</guid>
      <description>&lt;h2 id=&#34;译-go-interface-values&#34;&gt;[译] Go Interface Values&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;原文 (&lt;a href=&#34;https://www.airs.com/blog/archives/281&#34;&gt;https://www.airs.com/blog/archives/281&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;原文翻译&#34;&gt;原文翻译&lt;/h2&gt;&#xA;&lt;p&gt;虽然 Go 中interface 的指是灵活的，但它们也有令人困惑的方面。&lt;/p&gt;&#xA;&lt;p&gt;接口值例如—-一个interface类型的变量—-包含其他类型的值。 interface类型被称为静态类型，因为这是编译器在编译期看到的类型。 另一种类型只在运行时可见，称为动态类型(dynamic type)。 根据定义，动态类型可以是任何除了interface的其他类型。&lt;/p&gt;&#xA;&lt;p&gt;当通过赋值或函数调用复制一个 interface 值时，你是在复制动态类型里的值。 这通常是大多数类型通常的工作方式。 但是，使用 interface 的一个非常常见的情况是将动态类型作为指针使用。 在这种情况下，当你拷贝接口时，你拷贝的其实是指针，但是你不会拷贝指针指向的值。 在许多情况下，如果方法要更改值本身, 类型(type)的方法需要使用指针作为接收方(receiver)。 当 interface 必需的方法发生这种情况时，interface 实际上要求动态类型是指针类型。&lt;/p&gt;&#xA;&lt;p&gt;这意味着，技术上来说虽然 interface 总是作为一个值拷贝，但在实际使用中，它们的行为常常好像是通过引用拷贝的。 也就是说，尽管没有显式标记，接口对象通常充当指针的角色。 这可能会让你困惑，直到你明白到底发生了什么。&lt;/p&gt;&#xA;&lt;p&gt;在我上一篇文章中提到，对于 gccgo，一个 interface 总是包含一个指向值的指针。 现在我要纠正这个错误: 如果一个程序存储了包含了指针(或者unsafe.Pointer类型) 的 interface，那么存储在 interface 中的值就是指针本身。 也就是说，gccgo 不存储指向指针的指针(这需要分配堆空间来保存指针)。 这是一种自然的高效方法，因为实际上大多数接口对象都包含指针。&lt;/p&gt;&#xA;&lt;p&gt;这种高效的方法贯穿于方法的实现。 方法总是接受指针作为接收方(receiver)参数。 如果方法的接收方(receiver)类型实际上不是指针，那么指针将隐式解引用，并在方法代码的开头复制值。 这意味着当在接口上调用方法时，存储在接口中的值可以直接传递给方法，而不管动态类型是否是指针。 (和上一篇文章一样，gc 编译器做的事情有些不同。)&lt;/p&gt;&#xA;&lt;h3 id=&#34;补充&#34;&gt;补充&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;原文其实有点绕&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;如果 v 是一个 interface{}&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;什么是interface?&lt;/p&gt;&#xA;&lt;p&gt;Interface 同时是两种东西&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;一些方法的集合&lt;/li&gt;&#xA;&lt;li&gt;它自身也是一种类型&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;interface{} type, the empty interface is the interface that has no methods.&lt;/p&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>https://fancive.github.io/about/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://fancive.github.io/about/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;golang &lt;a href=&#34;mailto:developer@baidu.com&#34;&gt;developer@baidu.com&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;mailto:fancivez@gmail.com&#34;&gt;fancivez@gmail.com&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;wechat:fancivez&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Contact</title>
      <link>https://fancive.github.io/contact/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://fancive.github.io/contact/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/fancive&#34;&gt;github.com/fancive&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
