<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Filebeat on home</title>
    <link>https://fancive.github.io/tags/filebeat/</link>
    <description>Recent content in Filebeat on home</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 28 Nov 2022 14:13:14 +0800</lastBuildDate>
    <atom:link href="https://fancive.github.io/tags/filebeat/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>我从filebeat-harvester中学到什么</title>
      <link>https://fancive.github.io/posts/what_i_learned_from_filebeat_harvester/</link>
      <pubDate>Mon, 28 Nov 2022 14:13:14 +0800</pubDate>
      <guid>https://fancive.github.io/posts/what_i_learned_from_filebeat_harvester/</guid>
      <description>&lt;h3 id=&#34;总体流程&#34;&gt;总体流程&lt;/h3&gt;&#xA;&lt;p&gt;filebeat 对每个path都会创建一个 &lt;code&gt;harvester&lt;/code&gt;,  &lt;code&gt;harvester&lt;/code&gt; 负责逐行读取文件内容。它的上游是 &lt;code&gt;input&lt;/code&gt; , &lt;code&gt;input&lt;/code&gt; 负责管理&lt;code&gt;harvester&lt;/code&gt;, 它的下游是 &lt;code&gt;output&lt;/code&gt;, &lt;code&gt;output&lt;/code&gt; 负责消费每一行消息。&lt;/p&gt;</description>
    </item>
    <item>
      <title>filebeat中使用的设计模式</title>
      <link>https://fancive.github.io/posts/design_pattern_used_in_filebeat/</link>
      <pubDate>Wed, 16 Sep 2020 22:15:59 +0800</pubDate>
      <guid>https://fancive.github.io/posts/design_pattern_used_in_filebeat/</guid>
      <description>&lt;h2 id=&#34;registry-与-lazyinit-结合&#34;&gt;registry 与 lazyinit 结合&lt;/h2&gt;</description>
    </item>
  </channel>
</rss>
